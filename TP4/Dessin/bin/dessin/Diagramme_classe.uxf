<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>60</x><y>10</y><w>230</w><h>310</h></coordinates><panel_attributes>dessin::Point
--
+aX: double
+aY: double
+SAM = -1: int
+ALIGNES = 0: int
+SIAM = 1: int
--
+Point(double pX, double pY): ctor
+Point(): ctor
+distance(Point p): double
+distance(): double
+getaX(): double
+setaX(double aX): void
+getaY(): double
+setaY(double aY): void
+toString(): String
+signeAngle(Point b, Point c): int
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>430</x><y>20</y><w>260</w><h>260</h></coordinates><panel_attributes>dessin::Polygone
--
+aCotes: int
+aSommets: Point[]
--
+Polygone(int pCotes): ctor
+nbrCotes(): int
+getPoint(int n): Point
+changePoint(int n, Point pP): void
+perimetre(): double
+surface(): double
+toString(): String
+estConvexe(): boolean
+dedans(Point pP): boolean
+plusGrand(Polygone pPoly): boolean
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>810</x><y>60</y><w>250</w><h>180</h></coordinates><panel_attributes>dessin::EnsemblePolygone
--
#aTMax: int
#aPlace: int
#aPolygones[]: Polygone
--
+EnsemblePolygone(int pTMax): ctor
+ajouterPolygone(Polygone pol): void
+sommePerimetres(): double
+affiche(): void
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>230</x><y>530</y><w>240</w><h>140</h></coordinates><panel_attributes>dessin::Rectangle
--
--
+Rectangle(Point p1, Point p2): ctor
+construire(Point p1, Point p2): void
+hauteur(): double
+largeur(): double
+surface(): double
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>220</x><y>350</y><w>370</w><h>110</h></coordinates><panel_attributes>dessin::Quadrilatere
--
--
+Quadrilatere(Point p1, Point p2, Point p3, Point p4): ctor
+Quadrilatere(): ctor
+surface(): double
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>720</x><y>350</y><w>290</w><h>110</h></coordinates><panel_attributes>dessin::Triangle
--
--
+Triangle(): ctor
+Triangle(Point p1, Point p2, Point p3): ctor
+surface(): double
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1000</x><y>560</y><w>180</w><h>70</h></coordinates><panel_attributes>dessin::Test
--
--
+main(String[] args): void
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>280</x><y>170</y><w>170</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>150;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>680</x><y>120</y><w>150</w><h>50</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;130;30</additional_attributes></element><element><id>Relation</id><coordinates><x>670</x><y>270</y><w>170</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;150;80</additional_attributes></element><element><id>Relation</id><coordinates><x>460</x><y>270</y><w>50</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>30;10;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>340</x><y>450</y><w>30</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;80</additional_attributes></element></diagram>